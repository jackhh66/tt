########################################
###          DEFAULT SETTINGS        ###
########################################

# Any of those settings can be changed 
# by the user. To overwrite a setting, 
# create a settings.toml or load from 
# .env file or env vars.
# As an example, to change the port:
#
#   settings.toml
#   [default]
#    port = 8081
#
# or via .env 
# export TT_PORT=8081


########################################
###        DYNACONF SETTINGS         ###
########################################

[default]
# Dynaconf settings verification
VALUE = "Production - Default"

########################################
###         PYTHON SETTINGS          ###
########################################

# Log level
# set to "DEBUG" if you need 
# to troubleshoot
loglevel = "INFO"

########################################
###         FASTAPI SETTINGS         ###
########################################

# Uvicorn Server settings
host = "0.0.0.0"
port = 8080

# If set to true, the server will
# provide a ui for the bot available at
# http://0.0.0.0:8080/
# refer to frontend documentation for
# more details
ui_enabled = false

# Your webhook secret to send
# trade alert directly to your chat.
# If you use Trading view, the webhook
# to be set in the trading view notification
# will be https://0.0.0.0/webhook/123abc
# as per the above and below data

webhook_secret = "123abc"

# Forward the webhook data 
# to another endpoint like another bot
# or webhook service.

# Forwarded  Enable/Disable
forwarder = false
# Forwarder URL
forwarder_url = ""

########################################
###        APPRISE SETTINGS          ###
########################################

# Refer to 
# https://github.com/caronc/apprise/wiki
# Apprise endpoint URL can be a URL 
# for the chat, a URL to an Apprise config
# or a URL to the Apprise API endpoint
# apprise_url = "tgram://BOTTOKEN/CHANNEL"
# apprise_url = "discord://token1/channel"
apprise_url = "json://localhost"

#Format of the notification. Format can be
# NotifyFormat.MARKDOWN 
# or NotifyFormat.HTML
apprise_format = "NotifyFormat.MARKDOWN"

########################################
###      IAMLISTENING SETTINGS       ###
########################################

# Module Enable/Disable
iamlistening_enabled = true

########################################
###   COMMON BOT COMMAND SETTINGS    ###
########################################

# Bot Prefix 
bot_prefix = "/"
# Specific data that should be ignore by
# the parser
bot_ignore = "‚ÑπÔ∏è ü¶Ñ ‚ö†Ô∏è üìä üè¶ üì∫ ‚¨ÜÔ∏è üí¨ qq"
# Command for help
bot_command_help = "help"
# Command for info
bot_command_info = "info"
# Command for user balance
bot_command_bal = "bal"
# Command for user position
bot_command_pos = "pos"
# Command for daily pnl
bot_command_pnl_daily = "d"
# Command for instrument quote
bot_command_quote = "q"

# Help Message
helper_commands = """
üîÄ /trading
üîÅ /restart
üï∏Ô∏è /network
"""
# Command for switch trading on or off
bot_command_trading = "trading"
# Command to retrieve network info
# such as latency ping and IP address of
# the bot
bot_command_network = "network"
# Command to restart the bot
bot_command_restart = "restart"

# help message used in talky app
dxsp_commands = """
üéØ BUY WBTC
üéØ /q WBTC
üè¶ /bal
üè¶ /pos
"""

# Help Message
ccxt_commands = """
üéØ BUY BTCUSDT
üéØ /q BTCUSDT
üè¶ /bal
üè¶ /pos
"""

# help message listing the commands available
talkytrend_commands = "üì∫ /live\nüì∞ /news\nüìä /trend"

# bot command for tv feed
bot_command_tv = "live"
# bot command for trading view trend
bot_command_trend = "trend"
# bot command for news feeds
bot_command_news = "news"

# help message listing the commands
# available
llm_commands = """
ü¶æ /qq\n
üí¨ /ai\n
‚û∞ /aimode\n
üßΩ /clearai\n
"""
# command for topic/conversation
bot_command_question = "qq"
# command for reset chat
bot_command_clearai = "clearai"
# command to activate or deactivate aimode
# not implemented
bot_command_aimode = "aimode"

########################################
###         TRADING SETTINGS         ###
########################################

# Trading Enable/Disable
trading_enabled = true

# Trading % of your position to risk per order
# 10 = 10% of the position
trading_risk_amount = 10

########################################
###        FINDMYORDER SETTINGS      ###
########################################

# Module Enable/Disable
findmyorder_enabled = true

# Keyword to be use to identify an order
action_identifier = "BUY SELL LONG SHORT"
# Keyword identifier for stoploss
stop_loss_identifier = "sl="
# Keyword identifier for take-profit
take_profit_identifier = 'tp='
# Keyword identifier for quantity
quantity_identifier = 'q='
# Keyword identifier for order type
order_type_identifier = "spot future margin"
# Keyword identifier for leverage
leverage_type_identifier = "cross isolated"
# Keyword identifier for comments
comment_identifier = "comment="

# Stoploss default value is none is provided
stop_loss = 1000
# Take-Profit default value is none is provided
take_profit = 1000
# Quantity default value is none is provided
quantity = 1

# Settings to enable or disable
# instrument mapping
instrument_mapping = true
# instrument mapping to use and alternative 
#  symbol when generating the order
mapping = [
    { id = "GOLD", alt = "XAUUSD" },
    { id = "SILVER", alt = "XAGUSD" },
    { id = "BTC", alt = "WBTC" },
    { id = "ETH", alt = "WETH" },
]

# Instrument to be ignored
# when generating an order
ignore_instrument = "US500 DOGE"

########################################
###         PLUGINS SETTINGS         ###
########################################

# Plugins Enable/Disable
plugin_enabled = true
# Plugins Locations
plugin_directory = "tt.plugins.default_plugins"

# Plugins name list to load at the start
# of the bot to allow a reduced memory 
# usage and footprint if needed
# if you want all the plugins to be loaded
# at the start, set it to
# authorized_plugins = []
# Here the value has been set for helper
# and dex exchange plugins only
authorized_plugins = [
    # 'helper_plugin',
    # 'dex_exchange_plugin',
    ]

# Example plugin for test purpose
example_plugin_enabled = false
# User Plugin Enable/Disable
# Not yet implemented
user_plugins_allowed = false
 

########################################
###          HELPER SETTINGS         ###
########################################

# Helper Enable/Disable
helper_enabled = true

# URL endpoint for the latency 
# ping. Used for testping testing
ping = "8.8.8.8"

########################################
###           LLM SETTINGS           ###
########################################

# Module Enable/Disable
llm_enabled = true

# LLM Model to use
llm_model = "gpt-3.5-turbo"

# LLM Provider
# Refer to https://github.com/xtekky/gpt4free
# for the list of supported provider
llm_provider = "g4f.Provider.ChatgptAi"

llm_ai_mode = false

########################################
###        TALKYTREND SETTINGS       ###
########################################

# Module Enable/Disable
talkytrend_enabled = true

# Signals Enable/Disable
enable_signals = true
# instrument monitored under trend
# use https://tvdb.brianthe.dev
# to update the list for your instrument
assets = [
    { id ="EURUSD", exchange='FX_IDC',screener="forex"},
    { id ="BTCUSD", exchange='BINANCE',screener="crypto"},
]

enable_yfinance = true
# yahoo finance ticker reference
# to retrieve company news
# or index news
ticker_reference = "NVDA"

# Events Enable/Disable
enable_events = true
# Events calendar
economic_calendar = "https://nfs.faireconomy.media/ff_calendar_thisweek.json"
# Adhoc date to add in event tracker
fomc_decision_date = ["2023-09-20","2023-11-01","2023-12-13"]

# TV url
live_tv_url = "https://bloomberg.com/media-manifest/streams/us.m3u8"

# Feeds Enable/Disable
enable_feed = true
# Feeds RSS url
news_feed = "https://www.dailyfx.com/feeds/market-news"


########################################
###           CEFI SETTINGS          ###
########################################

# Module Enable/Disable
cex_enabled = true

########################################
###           DXSP SETTINGS          ###
########################################

# Enable/Disable DXSP
dxsp_enabled = true

# Header to use for retrieving urls content below
headers = {User-Agent= 'Mozilla/5.0'}

# DEX ABI to use in case you have no explorer setup
dex_router_abi_url = "https://raw.githubusercontent.com/uniswap-python/uniswap-python/master/uniswap/assets/uniswap-v2/router02.abi"
# DEX factory address to use
dex_factory_contract_addr = "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
# DEX ABI to use in case you have no explorer setup
dex_erc20_abi_url = "https://raw.githubusercontent.com/Uniswap/interface/44c355c7f0f8ab5bdb3e0790560e84e59f5666f7/src/abis/erc20.json"

# token list using uniswap tokenlist format
# https://github.com/mraniki/tokenlist
# this can be used to avoid using coingecko
# or be used for niche token not listed anywhere
# or for testnet
token_mainnet_list = "https://raw.githubusercontent.com/mraniki/tokenlist/main/all.json"
token_testnet_list = "https://raw.githubusercontent.com/mraniki/tokenlist/main/testnet.json"
token_personal_list = "https://raw.githubusercontent.com/mraniki/tokenlist/main/TT.json"

########################################
###      CHAT PLATFORM SETTINGS      ###
########################################

[default.platform.template]
platform = ""
bot_token = ""
bot_channel_id = ""
bot_api_id = ""
bot_api_hash = ""
bot_hostname = ""
bot_user = ""
bot_pass = ""
bot_auth_token = ""
iteration_enabled = false
iteration_limit = -1


# [default.platform.backup]
# platform = ""
# bot_token = ""
# bot_channel_id = ""
# bot_api_id = ""
# bot_api_hash = ""
# bot_hostname = ""
# bot_user = ""
# bot_pass = ""
# bot_auth_token = ""
# iteration_enabled = false
# iteration_limit = -1


########################################
###           DEX SETTINGS          ###
########################################

# dex settings for 1 exchange based on chain 1 mainnet
# and uniswap v2 protocol type and router uniswap
[default.dex.template]
wallet_address = ""
private_key = ""
rpc = ""
protocol_type = "uniswap"
protocol_version = 2
api_endpoint = ''
api_key = ""
router_contract_addr = ""
factory_contract_addr = ""
trading_asset_address = ""
trading_risk_amount = 10
trading_slippage = 2
block_explorer_url = ""
block_explorer_api = ""

# [default.dex.eth]
# wallet_address = "0x1234567890123456789012345678901234567890"
# private_key = "0xdeadbeef45ab87712ad64ccb3b10217737f7faacbf2872e88fdd9a537d8fe266"
# rpc = "https://rpc.ankr.com/eth"
# protocol_type = "uniswap"
# protocol_version = 2
# api_endpoint = ''
# api_key = ""
# router_contract_addr = "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
# factory_contract_addr = "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
# trading_asset_address = "0xdAC17F958D2ee523a2206206994597C13D831ec7"
# trading_risk_amount = 10
# trading_slippage = 2
# block_explorer_url = "https://api.etherscan.io/api?"
# block_explorer_api = "798437294880920392"

# dex settings for 1 exchange based on chain 56 mainnet
# and uniswap v2 protocol type and router pancakeswap
# [default.dex.bsc]
# wallet_address = "0x1234567890123456789012345678901234567890"
# private_key = "0xdeadbeef45ab87712ad64ccb3b10217737f7faacbf2872e88fdd9a537d8fe266"
# rpc = "https://rpc.ankr.com/bsc"
# protocol_type = "uniswap"
# protocol_version = 2
# api_endpoint = ''
# api_key = ""
# router_contract_addr = "0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D"
# factory_contract_addr = "0xcA143Ce32Fe78f1f7019d7d551a6402fC5350c73"
# trading_asset_address = "0xdAC17F958D2ee523a2206206994597C13D831ec7"
# trading_risk_amount = 10
# trading_slippage = 2
# block_explorer_url = "https://api.bscscan.com/api?"
# block_explorer_api = "798437294880920392"

# dex settings for 1 exchange based on polygon mainnet
# and 0x protocol type and 0x router
# [default.dex.polygon]
# wallet_address = "0x1234567890123456789012345678901234567890"
# private_key = "0xdeadbeef45ab87712ad64ccb3b10217737f7faacbf2872e88fdd9a537d8fe266"
# rpc = "https://rpc.ankr.com/polygon"
# protocol_type = "0x"
# protocol_version = 4
# api_endpoint = "https://polygon.api.0x.org/"
# api_key = ""
# router_contract_addr = "0xdef1c0ded9bec7f1a1670819833240f027b25eff"
# factory_contract_addr = "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f"
# trading_asset_address = "0xdAC17F958D2ee523a2206206994597C13D831ec7"
# trading_risk_amount = 10
# trading_slippage = 2
# block_explorer_url = "https://api.polygonscan.com/api?"
# block_explorer_api = "798437294880920392"

########################################
###           CEX SETTINGS          ###
########################################

# CCXT Parameters to connect
# to 1 or more exchanges
[default.cex.template]
cex_name = ""
cex_api= ""
cex_secret= ""
cex_password = ""
cex_testmode = true
cex_defaulttype = ""
cex_ordertype = ""
trading_risk_amount = 10
trading_asset = "USDT"
trading_asset_separator = ""

# second cex example
# [default.cex.binance]
# cex_name = "binance"
# cex_api=""
# cex_secret=""
# cex_testmode = true
# cex_defaulttype = "SPOT"
# cex_ordertype = "MARKET"
# trading_risk_amount = 10
# trading_asset = "USDT"
# trading_asset_separator = ""
########################################
###     END OF DEFAULT SETTINGS      ###
########################################